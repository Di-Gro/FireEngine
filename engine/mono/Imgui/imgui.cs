// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;
using System.Numerics;

namespace UI
{
    // ../../imgui/imgui.h:185
    public delegate int ImGuiInputTextCallback(
        ref ImGuiInputTextCallbackData data
    );

    // ../../imgui/imgui.h:186
    public delegate void ImGuiSizeCallback(
        ref ImGuiSizeCallbackData data
    );

    // ../../imgui/imgui.h:2010
    public delegate void ImDrawCallback(
        in ImDrawList parent_list,
        in ImDrawCmd cmd
    );

    public static partial class ImGui
    {
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushMultiItemsWidths@ImGui@@YAXHM@Z")]
        public static extern void PushMultiItemsWidths(int components, float width_full);

        // ../../imgui/imgui.h:251
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z")]
        public static extern IntPtr CreateContext(
            IntPtr shared_font_atlas = default
        );

        // ../../imgui/imgui.h:252
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z")]
        public static extern void DestroyContext(
            IntPtr ctx = default
        );

        // ../../imgui/imgui.h:253
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ")]
        public static extern IntPtr GetCurrentContext(
        );

        // ../../imgui/imgui.h:254
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z")]
        public static extern void SetCurrentContext(
            IntPtr ctx
        );

        // ../../imgui/imgui.h:257
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetIO@ImGui@@YAAEAUImGuiIO@@XZ")]
        public static extern IntPtr GetIO(
        );

        // ../../imgui/imgui.h:258
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ")]
        public static extern IntPtr GetStyle(
        );

        // ../../imgui/imgui.h:259
        [DllImport(Engine.Paths.Exe, EntryPoint = "?NewFrame@ImGui@@YAXXZ")]
        public static extern void NewFrame(
        );

        // ../../imgui/imgui.h:260
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndFrame@ImGui@@YAXXZ")]
        public static extern void EndFrame(
        );

        // ../../imgui/imgui.h:261
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Render@ImGui@@YAXXZ")]
        public static extern void Render(
        );

        // ../../imgui/imgui.h:262
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ")]
        public static extern IntPtr GetDrawData(
        );

        // ../../imgui/imgui.h:265
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ShowDemoWindow@ImGui@@YAXPEA_N@Z")]
        public static extern void ShowDemoWindow(
            IntPtr p_open = default
        );

        // ../../imgui/imgui.h:266
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ShowAboutWindow@ImGui@@YAXPEA_N@Z")]
        public static extern void ShowAboutWindow(
            IntPtr p_open = default
        );

        // ../../imgui/imgui.h:267
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ShowMetricsWindow@ImGui@@YAXPEA_N@Z")]
        public static extern void ShowMetricsWindow(
            IntPtr p_open = default
        );

        // ../../imgui/imgui.h:268
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ShowStyleEditor@ImGui@@YAXPEAUImGuiStyle@@@Z")]
        public static extern void ShowStyleEditor(
            IntPtr _ref = default
        );

        // ../../imgui/imgui.h:269
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ShowStyleSelector@ImGui@@YA_NPEBD@Z")]
        public static extern bool ShowStyleSelector(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label
        );

        // ../../imgui/imgui.h:270
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ShowFontSelector@ImGui@@YAXPEBD@Z")]
        public static extern void ShowFontSelector(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label
        );

        // ../../imgui/imgui.h:271
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ShowUserGuide@ImGui@@YAXXZ")]
        public static extern void ShowUserGuide(
        );

        // ../../imgui/imgui.h:272
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetVersion@ImGui@@YAPEBDXZ")]
        public static extern IntPtr GetVersion(
        );

        // ../../imgui/imgui.h:275
        [DllImport(Engine.Paths.Exe, EntryPoint = "?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z")]
        public static extern void StyleColorsDark(
            IntPtr dst = default
        );

        // ../../imgui/imgui.h:276
        [DllImport(Engine.Paths.Exe, EntryPoint = "?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z")]
        public static extern void StyleColorsClassic(
            IntPtr dst = default
        );

        // ../../imgui/imgui.h:277
        [DllImport(Engine.Paths.Exe, EntryPoint = "?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z")]
        public static extern void StyleColorsLight(
            IntPtr dst = default
        );

        // ../../imgui/imgui.h:291
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Begin@ImGui@@YA_NPEBDPEA_NH@Z")]
        public static extern bool Begin(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string name,
            IntPtr p_open = default,
            int flags = default
        );

        // ../../imgui/imgui.h:292
        [DllImport(Engine.Paths.Exe, EntryPoint = "?End@ImGui@@YAXXZ")]
        public static extern void End(
        );

        // ../../imgui/imgui.h:299
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z")]
        public static extern bool BeginChild(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            in Vector2 size = default,
            bool border = default,
            int flags = default
        );

        // ../../imgui/imgui.h:300
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z")]
        public static extern bool BeginChild(
            uint id,
            in Vector2 size = default,
            bool border = default,
            int flags = default
        );

        // ../../imgui/imgui.h:301
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndChild@ImGui@@YAXXZ")]
        public static extern void EndChild(
        );

        // ../../imgui/imgui.h:305
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsWindowAppearing@ImGui@@YA_NXZ")]
        public static extern bool IsWindowAppearing(
        );

        // ../../imgui/imgui.h:306
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsWindowCollapsed@ImGui@@YA_NXZ")]
        public static extern bool IsWindowCollapsed(
        );

        // ../../imgui/imgui.h:307
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsWindowFocused@ImGui@@YA_NH@Z")]
        public static extern bool IsWindowFocused(
            int flags = default
        );

        // ../../imgui/imgui.h:308
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsWindowHovered@ImGui@@YA_NH@Z")]
        public static extern bool IsWindowHovered(
            int flags = default
        );

        // ../../imgui/imgui.h:309
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ")]
        public static extern IntPtr GetWindowDrawList(
        );

        // ../../imgui/imgui.h:310
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowDpiScale@ImGui@@YAMXZ")]
        public static extern float GetWindowDpiScale(
        );

        // ../../imgui/imgui.h:311
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowViewport@ImGui@@YAPEAUImGuiViewport@@XZ")]
        public static extern IntPtr GetWindowViewport(
        );

        // ../../imgui/imgui.h:312
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowPos@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetWindowPos(
        );

        // ../../imgui/imgui.h:313
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowSize@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetWindowSize(
        );

        // ../../imgui/imgui.h:314
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowWidth@ImGui@@YAMXZ")]
        public static extern float GetWindowWidth(
        );

        // ../../imgui/imgui.h:315
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowHeight@ImGui@@YAMXZ")]
        public static extern float GetWindowHeight(
        );

        // ../../imgui/imgui.h:318
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z")]
        public static extern void SetNextWindowPos(
            in Vector2 pos,
            int cond = default,
            in Vector2 pivot = default
        );

        // ../../imgui/imgui.h:319
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z")]
        public static extern void SetNextWindowSize(
            in Vector2 size,
            int cond = default
        );

        // ../../imgui/imgui.h:320
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z")]
        public static extern void SetNextWindowSizeConstraints(
            in Vector2 size_min,
            in Vector2 size_max,
            ImGuiSizeCallback custom_callback = default,
            IntPtr custom_callback_data = default
        );

        // ../../imgui/imgui.h:321
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z")]
        public static extern void SetNextWindowContentSize(
            in Vector2 size
        );

        // ../../imgui/imgui.h:322
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowCollapsed@ImGui@@YAX_NH@Z")]
        public static extern void SetNextWindowCollapsed(
            bool collapsed,
            int cond = default
        );

        // ../../imgui/imgui.h:323
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowFocus@ImGui@@YAXXZ")]
        public static extern void SetNextWindowFocus(
        );

        // ../../imgui/imgui.h:324
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowBgAlpha@ImGui@@YAXM@Z")]
        public static extern void SetNextWindowBgAlpha(
            float alpha
        );

        // ../../imgui/imgui.h:325
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowViewport@ImGui@@YAXI@Z")]
        public static extern void SetNextWindowViewport(
            uint viewport_id
        );

        // ../../imgui/imgui.h:326
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z")]
        public static extern void SetWindowPos(
            in Vector2 pos,
            int cond = default
        );

        // ../../imgui/imgui.h:327
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z")]
        public static extern void SetWindowSize(
            in Vector2 size,
            int cond = default
        );

        // ../../imgui/imgui.h:328
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowCollapsed@ImGui@@YAX_NH@Z")]
        public static extern void SetWindowCollapsed(
            bool collapsed,
            int cond = default
        );

        // ../../imgui/imgui.h:329
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowFocus@ImGui@@YAXXZ")]
        public static extern void SetWindowFocus(
        );

        // ../../imgui/imgui.h:330
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowFontScale@ImGui@@YAXM@Z")]
        public static extern void SetWindowFontScale(
            float scale
        );

        // ../../imgui/imgui.h:331
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z")]
        public static extern void SetWindowPos(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string name,
            in Vector2 pos,
            int cond = default
        );

        // ../../imgui/imgui.h:332
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z")]
        public static extern void SetWindowSize(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string name,
            in Vector2 size,
            int cond = default
        );

        // ../../imgui/imgui.h:333
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z")]
        public static extern void SetWindowCollapsed(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string name,
            bool collapsed,
            int cond = default
        );

        // ../../imgui/imgui.h:334
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetWindowFocus@ImGui@@YAXPEBD@Z")]
        public static extern void SetWindowFocus(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string name
        );

        // ../../imgui/imgui.h:338
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetContentRegionMax(
        );

        // ../../imgui/imgui.h:339
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetContentRegionAvail(
        );

        // ../../imgui/imgui.h:340
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetWindowContentRegionMin(
        );

        // ../../imgui/imgui.h:341
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetWindowContentRegionMax(
        );

        // ../../imgui/imgui.h:342
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowContentRegionWidth@ImGui@@YAMXZ")]
        public static extern float GetWindowContentRegionWidth(
        );

        // ../../imgui/imgui.h:345
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetScrollX@ImGui@@YAMXZ")]
        public static extern float GetScrollX(
        );

        // ../../imgui/imgui.h:346
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetScrollY@ImGui@@YAMXZ")]
        public static extern float GetScrollY(
        );

        // ../../imgui/imgui.h:347
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetScrollMaxX@ImGui@@YAMXZ")]
        public static extern float GetScrollMaxX(
        );

        // ../../imgui/imgui.h:348
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetScrollMaxY@ImGui@@YAMXZ")]
        public static extern float GetScrollMaxY(
        );

        // ../../imgui/imgui.h:349
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetScrollX@ImGui@@YAXM@Z")]
        public static extern void SetScrollX(
            float scroll_x
        );

        // ../../imgui/imgui.h:350
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetScrollY@ImGui@@YAXM@Z")]
        public static extern void SetScrollY(
            float scroll_y
        );

        // ../../imgui/imgui.h:351
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetScrollHereX@ImGui@@YAXM@Z")]
        public static extern void SetScrollHereX(
            float center_x_ratio = 0.5f
        );

        // ../../imgui/imgui.h:352
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetScrollHereY@ImGui@@YAXM@Z")]
        public static extern void SetScrollHereY(
            float center_y_ratio = 0.5f
        );

        // ../../imgui/imgui.h:353
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetScrollFromPosX@ImGui@@YAXMM@Z")]
        public static extern void SetScrollFromPosX(
            float local_x,
            float center_x_ratio = 0.5f
        );

        // ../../imgui/imgui.h:354
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetScrollFromPosY@ImGui@@YAXMM@Z")]
        public static extern void SetScrollFromPosY(
            float local_y,
            float center_y_ratio = 0.5f
        );

        // ../../imgui/imgui.h:357
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushFont@ImGui@@YAXPEAUImFont@@@Z")]
        public static extern void PushFont(
            ref ImFont font
        );

        // ../../imgui/imgui.h:358
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopFont@ImGui@@YAXXZ")]
        public static extern void PopFont(
        );

        // ../../imgui/imgui.h:359
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushStyleColor@ImGui@@YAXHI@Z")]
        public static extern void PushStyleColor(
            int idx,
            uint col
        );

        // ../../imgui/imgui.h:360
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z")]
        public static extern void PushStyleColor(
            int idx,
            in Vector4 col
        );

        // ../../imgui/imgui.h:361
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopStyleColor@ImGui@@YAXH@Z")]
        public static extern void PopStyleColor(
            int count = 1
        );

        // ../../imgui/imgui.h:362
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushStyleVar@ImGui@@YAXHM@Z")]
        public static extern void PushStyleVar(
            int idx,
            float val
        );

        // ../../imgui/imgui.h:363
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z")]
        public static extern void PushStyleVar(
            int idx,
            in Vector2 val
        );

        // ../../imgui/imgui.h:364
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopStyleVar@ImGui@@YAXH@Z")]
        public static extern void PopStyleVar(
            int count = 1
        );

        // ../../imgui/imgui.h:365
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z")]
        public static extern IntPtr GetStyleColorVec4(
            int idx
        );

        // ../../imgui/imgui.h:366
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetFont@ImGui@@YAPEAUImFont@@XZ")]
        public static extern IntPtr GetFont(
        );

        // ../../imgui/imgui.h:367
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetFontSize@ImGui@@YAMXZ")]
        public static extern float GetFontSize(
        );

        // ../../imgui/imgui.h:368
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetFontTexUvWhitePixel(
        );

        // ../../imgui/imgui.h:369
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetColorU32@ImGui@@YAIHM@Z")]
        public static extern uint GetColorU32(
            int idx,
            float alpha_mul = 1.0f
        );

        // ../../imgui/imgui.h:370
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z")]
        public static extern uint GetColorU32(
            in Vector4 col
        );

        // ../../imgui/imgui.h:371
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetColorU32@ImGui@@YAII@Z")]
        public static extern uint GetColorU32(
            uint col
        );

        // ../../imgui/imgui.h:374
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushItemWidth@ImGui@@YAXM@Z")]
        public static extern void PushItemWidth(
            float item_width
        );

        // ../../imgui/imgui.h:375
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopItemWidth@ImGui@@YAXXZ")]
        public static extern void PopItemWidth(
        );

        // ../../imgui/imgui.h:376
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextItemWidth@ImGui@@YAXM@Z")]
        public static extern void SetNextItemWidth(
            float item_width
        );

        // ../../imgui/imgui.h:377
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CalcItemWidth@ImGui@@YAMXZ")]
        public static extern float CalcItemWidth(
        );

        // ../../imgui/imgui.h:378
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushTextWrapPos@ImGui@@YAXM@Z")]
        public static extern void PushTextWrapPos(
            float wrap_local_pos_x = default
        );

        // ../../imgui/imgui.h:379
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopTextWrapPos@ImGui@@YAXXZ")]
        public static extern void PopTextWrapPos(
        );

        // ../../imgui/imgui.h:380
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushAllowKeyboardFocus@ImGui@@YAX_N@Z")]
        public static extern void PushAllowKeyboardFocus(
            bool allow_keyboard_focus
        );

        // ../../imgui/imgui.h:381
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopAllowKeyboardFocus@ImGui@@YAXXZ")]
        public static extern void PopAllowKeyboardFocus(
        );

        // ../../imgui/imgui.h:382
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushButtonRepeat@ImGui@@YAX_N@Z")]
        public static extern void PushButtonRepeat(
            bool repeat
        );

        // ../../imgui/imgui.h:383
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopButtonRepeat@ImGui@@YAXXZ")]
        public static extern void PopButtonRepeat(
        );

        // ../../imgui/imgui.h:392
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Separator@ImGui@@YAXXZ")]
        public static extern void Separator(
        );

        // ../../imgui/imgui.h:393
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SameLine@ImGui@@YAXMM@Z")]
        public static extern void SameLine(
            float offset_from_start_x = default,
            float spacing = -1.0f
        );

        // ../../imgui/imgui.h:394
        [DllImport(Engine.Paths.Exe, EntryPoint = "?NewLine@ImGui@@YAXXZ")]
        public static extern void NewLine(
        );

        // ../../imgui/imgui.h:395
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Spacing@ImGui@@YAXXZ")]
        public static extern void Spacing(
        );

        // ../../imgui/imgui.h:396
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Dummy@ImGui@@YAXAEBUImVec2@@@Z")]
        public static extern void Dummy(
            in Vector2 size
        );

        // ../../imgui/imgui.h:397
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Indent@ImGui@@YAXM@Z")]
        public static extern void Indent(
            float indent_w = default
        );

        // ../../imgui/imgui.h:398
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Unindent@ImGui@@YAXM@Z")]
        public static extern void Unindent(
            float indent_w = default
        );

        // ../../imgui/imgui.h:399
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginGroup@ImGui@@YAXXZ")]
        public static extern void BeginGroup(
        );

        // ../../imgui/imgui.h:400
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndGroup@ImGui@@YAXXZ")]
        public static extern void EndGroup(
        );

        // ../../imgui/imgui.h:401
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetCursorPos@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetCursorPos(
        );

        // ../../imgui/imgui.h:402
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetCursorPosX@ImGui@@YAMXZ")]
        public static extern float GetCursorPosX(
        );

        // ../../imgui/imgui.h:403
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetCursorPosY@ImGui@@YAMXZ")]
        public static extern float GetCursorPosY(
        );

        // ../../imgui/imgui.h:404
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z")]
        public static extern void SetCursorPos(
            in Vector2 local_pos
        );

        // ../../imgui/imgui.h:405
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetCursorPosX@ImGui@@YAXM@Z")]
        public static extern void SetCursorPosX(
            float local_x
        );

        // ../../imgui/imgui.h:406
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetCursorPosY@ImGui@@YAXM@Z")]
        public static extern void SetCursorPosY(
            float local_y
        );

        // ../../imgui/imgui.h:407
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetCursorStartPos(
        );

        // ../../imgui/imgui.h:408
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetCursorScreenPos(
        );

        // ../../imgui/imgui.h:409
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z")]
        public static extern void SetCursorScreenPos(
            in Vector2 pos
        );

        // ../../imgui/imgui.h:410
        [DllImport(Engine.Paths.Exe, EntryPoint = "?AlignTextToFramePadding@ImGui@@YAXXZ")]
        public static extern void AlignTextToFramePadding(
        );

        // ../../imgui/imgui.h:411
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetTextLineHeight@ImGui@@YAMXZ")]
        public static extern float GetTextLineHeight(
        );

        // ../../imgui/imgui.h:412
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetTextLineHeightWithSpacing@ImGui@@YAMXZ")]
        public static extern float GetTextLineHeightWithSpacing(
        );

        // ../../imgui/imgui.h:413
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetFrameHeight@ImGui@@YAMXZ")]
        public static extern float GetFrameHeight(
        );

        // ../../imgui/imgui.h:414
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetFrameHeightWithSpacing@ImGui@@YAMXZ")]
        public static extern float GetFrameHeightWithSpacing(
        );

        // ../../imgui/imgui.h:423
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushID@ImGui@@YAXPEBD@Z")]
        public static extern void PushID(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id
        );

        // ../../imgui/imgui.h:424
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushID@ImGui@@YAXPEBD0@Z")]
        public static extern void PushID(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id_begin,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id_end
        );

        // ../../imgui/imgui.h:425
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushID@ImGui@@YAXPEBX@Z")]
        public static extern void PushID(
            IntPtr ptr_id
        );

        // ../../imgui/imgui.h:426
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushID@ImGui@@YAXH@Z")]
        public static extern void PushID(
            int int_id
        );

        // ../../imgui/imgui.h:427
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopID@ImGui@@YAXXZ")]
        public static extern void PopID(
        );

        // ../../imgui/imgui.h:428
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetID@ImGui@@YAIPEBD@Z")]
        public static extern uint GetID(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id
        );

        // ../../imgui/imgui.h:429
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetID@ImGui@@YAIPEBD0@Z")]
        public static extern uint GetID(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id_begin,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id_end
        );

        // ../../imgui/imgui.h:430
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetID@ImGui@@YAIPEBX@Z")]
        public static extern uint GetID(
            IntPtr ptr_id
        );

        // ../../imgui/imgui.h:433
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TextUnformatted@ImGui@@YAXPEBD0@Z")]
        public static extern void TextUnformatted(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string text,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string text_end = default
        );

        // ../../imgui/imgui.h:434
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Text@ImGui@@YAXPEBDZZ")]
        public static extern void Text(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:435
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TextV@ImGui@@YAXPEBDPEAD@Z")]
        public static extern void TextV(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:436
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TextColored@ImGui@@YAXAEBUImVec4@@PEBDZZ")]
        public static extern void TextColored(
            in Vector4 col,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:437
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TextColoredV@ImGui@@YAXAEBUImVec4@@PEBDPEAD@Z")]
        public static extern void TextColoredV(
            in Vector4 col,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:438
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TextDisabled@ImGui@@YAXPEBDZZ")]
        public static extern void TextDisabled(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:439
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TextDisabledV@ImGui@@YAXPEBDPEAD@Z")]
        public static extern void TextDisabledV(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:440
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TextWrapped@ImGui@@YAXPEBDZZ")]
        public static extern void TextWrapped(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:441
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TextWrappedV@ImGui@@YAXPEBDPEAD@Z")]
        public static extern void TextWrappedV(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:442
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LabelText@ImGui@@YAXPEBD0ZZ")]
        public static extern void LabelText(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:443
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LabelTextV@ImGui@@YAXPEBD0PEAD@Z")]
        public static extern void LabelTextV(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:444
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BulletText@ImGui@@YAXPEBDZZ")]
        public static extern void BulletText(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:445
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BulletTextV@ImGui@@YAXPEBDPEAD@Z")]
        public static extern void BulletTextV(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:450
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z")]
        public static extern bool Button(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in Vector2 size = default
        );

        // ../../imgui/imgui.h:451
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SmallButton@ImGui@@YA_NPEBD@Z")]
        public static extern bool SmallButton(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label
        );

        // ../../imgui/imgui.h:452
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InvisibleButton@ImGui@@YA_NPEBDAEBUImVec2@@@Z")]
        public static extern bool InvisibleButton(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            in Vector2 size
        );

        // ../../imgui/imgui.h:453
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ArrowButton@ImGui@@YA_NPEBDH@Z")]
        public static extern bool ArrowButton(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            int dir
        );

        // ../../imgui/imgui.h:454
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Image@ImGui@@YAXPEAXAEBUImVec2@@11AEBUImVec4@@2@Z")]
        public static extern void Image(
            IntPtr user_texture_id,
            in Vector2 size,
            in Vector2 uv0,
            in Vector2 uv1,
            in Vector4 tint_col,
            in Vector4 border_col = default
        );
        // overload
        public static void Image(
            IntPtr user_texture_id,
            in Vector2 size,
            in Vector2 uv0,
            in Vector2 uv1
        )
        {
            Image(user_texture_id, size, uv0, uv1, new Vector4(1,1,1,1));
        }
        // overload
        public static void Image(
            IntPtr user_texture_id,
            in Vector2 size,
            in Vector2 uv0 = default
        )
        {
            Image(user_texture_id, size, uv0, new Vector2(1,1));
        }

        // ../../imgui/imgui.h:455
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ImageButton@ImGui@@YA_NPEAXAEBUImVec2@@11HAEBUImVec4@@2@Z")]
        public static extern bool ImageButton(
            IntPtr user_texture_id,
            in Vector2 size,
            in Vector2 uv0,
            in Vector2 uv1,
            int frame_padding,
            in Vector4 bg_col,
            in Vector4 tint_col
        );
        // overload
        public static bool ImageButton(
            IntPtr user_texture_id,
            in Vector2 size,
            in Vector2 uv0,
            in Vector2 uv1,
            int frame_padding = -1,
            in Vector4 bg_col = default
        )
        {
            return ImageButton(user_texture_id, size, uv0, uv1, frame_padding, bg_col, new Vector4(1,1,1,1));
        }
        // overload
        public static bool ImageButton(
            IntPtr user_texture_id,
            in Vector2 size,
            in Vector2 uv0 = default
        )
        {
            return ImageButton(user_texture_id, size, uv0, new Vector2(1,1));
        }

        // ../../imgui/imgui.h:456
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Checkbox@ImGui@@YA_NPEBDPEA_N@Z")]
        public static extern bool Checkbox(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref bool v
        );

        // ../../imgui/imgui.h:457
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CheckboxFlags@ImGui@@YA_NPEBDPEAII@Z")]
        public static extern bool CheckboxFlags(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref uint flags,
            uint flags_value
        );

        // ../../imgui/imgui.h:458
        [DllImport(Engine.Paths.Exe, EntryPoint = "?RadioButton@ImGui@@YA_NPEBD_N@Z")]
        public static extern bool RadioButton(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            bool active
        );

        // ../../imgui/imgui.h:459
        [DllImport(Engine.Paths.Exe, EntryPoint = "?RadioButton@ImGui@@YA_NPEBDPEAHH@Z")]
        public static extern bool RadioButton(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_button
        );

        // ../../imgui/imgui.h:460
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ProgressBar@ImGui@@YAXMAEBUImVec2@@PEBD@Z")]
        public static extern void ProgressBar(
            float fraction,
            in Vector2 size_arg,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay = default
        );
        // overload
        public static void ProgressBar(
            float fraction
        )
        {
            ProgressBar(fraction, new Vector2(-1,0));
        }

        // ../../imgui/imgui.h:461
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Bullet@ImGui@@YAXXZ")]
        public static extern void Bullet(
        );

        // ../../imgui/imgui.h:466
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginCombo@ImGui@@YA_NPEBD0H@Z")]
        public static extern bool BeginCombo(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string preview_value,
            int flags = default
        );

        // ../../imgui/imgui.h:467
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndCombo@ImGui@@YAXXZ")]
        public static extern void EndCombo(
        );

        // ../../imgui/imgui.h:468
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Combo@ImGui@@YA_NPEBDPEAHQEBQEBDHH@Z")]
        public static extern bool Combo(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int current_item,
            in IntPtr items,
            int items_count,
            int popup_max_height_in_items = -1
        );

        // ../../imgui/imgui.h:469
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Combo@ImGui@@YA_NPEBDPEAH0H@Z")]
        public static extern bool Combo(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int current_item,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string items_separated_by_zeros,
            int popup_max_height_in_items = -1
        );

        // ../../imgui/imgui.h:470
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Combo@ImGui@@YA_NPEBDPEAHP6A_NPEAXHPEAPEBD@Z2HH@Z")]
        public static extern bool Combo(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int current_item,
            IntPtr items_getter,
            IntPtr data,
            int items_count,
            int popup_max_height_in_items = -1
        );

        // ../../imgui/imgui.h:480
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragFloat@ImGui@@YA_NPEBDPEAMMMM0M@Z")]
        public static extern bool DragFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_speed,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );
        // overload
        public static bool DragFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_speed = 1.0f,
            float v_min = default,
            float v_max = default
        )
        {
            return DragFloat(label, ref v, v_speed, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:481
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragFloat2@ImGui@@YA_NPEBDQEAMMMM0M@Z")]
        public static extern bool DragFloat2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_speed,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );
        // overload
        public static bool DragFloat2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_speed = 1.0f,
            float v_min = default,
            float v_max = default
        )
        {
            return DragFloat2(label, ref v, v_speed, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:482
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragFloat3@ImGui@@YA_NPEBDQEAMMMM0M@Z")]
        public static extern bool DragFloat3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_speed,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );
        // overload
        public static bool DragFloat3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_speed = 1.0f,
            float v_min = default,
            float v_max = default
        )
        {
            return DragFloat3(label, ref v, v_speed, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:483
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragFloat4@ImGui@@YA_NPEBDQEAMMMM0M@Z")]
        public static extern bool DragFloat4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_speed,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );
        // overload
        public static bool DragFloat4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_speed = 1.0f,
            float v_min = default,
            float v_max = default
        )
        {
            return DragFloat4(label, ref v, v_speed, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:484
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragFloatRange2@ImGui@@YA_NPEBDPEAM1MMM00M@Z")]
        public static extern bool DragFloatRange2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v_current_min,
            ref float v_current_max,
            float v_speed,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format_max = default,
            float power = 1.0f
        );
        // overload
        public static bool DragFloatRange2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v_current_min,
            ref float v_current_max,
            float v_speed = 1.0f,
            float v_min = default,
            float v_max = default
        )
        {
            return DragFloatRange2(label, ref v_current_min, ref v_current_max, v_speed, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:485
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragInt@ImGui@@YA_NPEBDPEAHMHH0@Z")]
        public static extern bool DragInt(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            float v_speed,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool DragInt(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            float v_speed = 1.0f,
            int v_min = default,
            int v_max = default
        )
        {
            return DragInt(label, ref v, v_speed, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:486
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragInt2@ImGui@@YA_NPEBDQEAHMHH0@Z")]
        public static extern bool DragInt2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            float v_speed,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool DragInt2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            float v_speed = 1.0f,
            int v_min = default,
            int v_max = default
        )
        {
            return DragInt2(label, ref v, v_speed, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:487
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragInt3@ImGui@@YA_NPEBDQEAHMHH0@Z")]
        public static extern bool DragInt3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            float v_speed,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool DragInt3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            float v_speed = 1.0f,
            int v_min = default,
            int v_max = default
        )
        {
            return DragInt3(label, ref v, v_speed, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:488
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragInt4@ImGui@@YA_NPEBDQEAHMHH0@Z")]
        public static extern bool DragInt4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            float v_speed,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool DragInt4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            float v_speed = 1.0f,
            int v_min = default,
            int v_max = default
        )
        {
            return DragInt4(label, ref v, v_speed, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:489
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragIntRange2@ImGui@@YA_NPEBDPEAH1MHH00@Z")]
        public static extern bool DragIntRange2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v_current_min,
            ref int v_current_max,
            float v_speed,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format_max = default
        );
        // overload
        public static bool DragIntRange2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v_current_min,
            ref int v_current_max,
            float v_speed = 1.0f,
            int v_min = default,
            int v_max = default
        )
        {
            return DragIntRange2(label, ref v_current_min, ref v_current_max, v_speed, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:490
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragScalar@ImGui@@YA_NPEBDHPEAXMPEBX20M@Z")]
        public static extern bool DragScalar(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int data_type,
            IntPtr p_data,
            float v_speed,
            IntPtr p_min = default,
            IntPtr p_max = default,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format = default,
            float power = 1.0f
        );

        // ../../imgui/imgui.h:491
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DragScalarN@ImGui@@YA_NPEBDHPEAXHMPEBX20M@Z")]
        public static extern bool DragScalarN(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int data_type,
            IntPtr p_data,
            int components,
            float v_speed,
            IntPtr p_min = default,
            IntPtr p_max = default,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format = default,
            float power = 1.0f
        );

        // ../../imgui/imgui.h:496
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderFloat@ImGui@@YA_NPEBDPEAMMM0M@Z")]
        public static extern bool SliderFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );

        // overload
        public static bool SliderFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_min,
            float v_max
        )
        {
            return SliderFloat(label, ref v, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:497
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderFloat2@ImGui@@YA_NPEBDQEAMMM0M@Z")]
        public static extern bool SliderFloat2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );
        // overload
        public static bool SliderFloat2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_min,
            float v_max
        )
        {
            return SliderFloat2(label, ref v, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:498
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderFloat3@ImGui@@YA_NPEBDQEAMMM0M@Z")]
        public static extern bool SliderFloat3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );
        // overload
        public static bool SliderFloat3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_min,
            float v_max
        )
        {
            return SliderFloat3(label, ref v, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:499
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderFloat4@ImGui@@YA_NPEBDQEAMMM0M@Z")]
        public static extern bool SliderFloat4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );
        // overload
        public static bool SliderFloat4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float v_min,
            float v_max
        )
        {
            return SliderFloat4(label, ref v, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:500
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderAngle@ImGui@@YA_NPEBDPEAMMM0@Z")]
        public static extern bool SliderAngle(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v_rad,
            float v_degrees_min,
            float v_degrees_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool SliderAngle(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v_rad,
            float v_degrees_min = -360.0f,
            float v_degrees_max = +360.0f
        )
        {
            return SliderAngle(label, ref v_rad, v_degrees_min, v_degrees_max, "%.0f deg");
        }

        // ../../imgui/imgui.h:501
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderInt@ImGui@@YA_NPEBDPEAHHH0@Z")]
        public static extern bool SliderInt(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool SliderInt(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_min,
            int v_max
        )
        {
            return SliderInt(label, ref v, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:502
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderInt2@ImGui@@YA_NPEBDQEAHHH0@Z")]
        public static extern bool SliderInt2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool SliderInt2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_min,
            int v_max
        )
        {
            return SliderInt2(label, ref v, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:503
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderInt3@ImGui@@YA_NPEBDQEAHHH0@Z")]
        public static extern bool SliderInt3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool SliderInt3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_min,
            int v_max
        )
        {
            return SliderInt3(label, ref v, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:504
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderInt4@ImGui@@YA_NPEBDQEAHHH0@Z")]
        public static extern bool SliderInt4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool SliderInt4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int v_min,
            int v_max
        )
        {
            return SliderInt4(label, ref v, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:505
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderScalar@ImGui@@YA_NPEBDHPEAXPEBX20M@Z")]
        public static extern bool SliderScalar(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int data_type,
            IntPtr p_data,
            IntPtr p_min,
            IntPtr p_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format = default,
            float power = 1.0f
        );

        // ../../imgui/imgui.h:506
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SliderScalarN@ImGui@@YA_NPEBDHPEAXHPEBX20M@Z")]
        public static extern bool SliderScalarN(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int data_type,
            IntPtr p_data,
            int components,
            IntPtr p_min,
            IntPtr p_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format = default,
            float power = 1.0f
        );

        // ../../imgui/imgui.h:507
        [DllImport(Engine.Paths.Exe, EntryPoint = "?VSliderFloat@ImGui@@YA_NPEBDAEBUImVec2@@PEAMMM0M@Z")]
        public static extern bool VSliderFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in Vector2 size,
            ref float v,
            float v_min,
            float v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            float power = 1.0f
        );
        // overload
        public static bool VSliderFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in Vector2 size,
            ref float v,
            float v_min,
            float v_max
        )
        {
            return VSliderFloat(label, size, ref v, v_min, v_max, "%.3f");
        }

        // ../../imgui/imgui.h:508
        [DllImport(Engine.Paths.Exe, EntryPoint = "?VSliderInt@ImGui@@YA_NPEBDAEBUImVec2@@PEAHHH0@Z")]
        public static extern bool VSliderInt(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in Vector2 size,
            ref int v,
            int v_min,
            int v_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format
        );
        // overload
        public static bool VSliderInt(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in Vector2 size,
            ref int v,
            int v_min,
            int v_max
        )
        {
            return VSliderInt(label, size, ref v, v_min, v_max, "%d");
        }

        // ../../imgui/imgui.h:509
        [DllImport(Engine.Paths.Exe, EntryPoint = "?VSliderScalar@ImGui@@YA_NPEBDAEBUImVec2@@HPEAXPEBX30M@Z")]
        public static extern bool VSliderScalar(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in Vector2 size,
            int data_type,
            IntPtr p_data,
            IntPtr p_min,
            IntPtr p_max,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format = default,
            float power = 1.0f
        );

        // ../../imgui/imgui.h:514
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputText@ImGui@@YA_NPEBDPEAD_KHP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z")]
        public static extern bool InputText(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref sbyte buf,
            ulong buf_size,
            int flags = default,
            ImGuiInputTextCallback callback = default,
            IntPtr user_data = default
        );

        // ../../imgui/imgui.h:515
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputTextMultiline@ImGui@@YA_NPEBDPEAD_KAEBUImVec2@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z")]
        public static extern bool InputTextMultiline(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref sbyte buf,
            ulong buf_size,
            in Vector2 size = default,
            int flags = default,
            ImGuiInputTextCallback callback = default,
            IntPtr user_data = default
        );

        // ../../imgui/imgui.h:516
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputTextWithHint@ImGui@@YA_NPEBD0PEAD_KHP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z")]
        public static extern bool InputTextWithHint(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string hint,
            ref sbyte buf,
            ulong buf_size,
            int flags = default,
            ImGuiInputTextCallback callback = default,
            IntPtr user_data = default
        );

        // ../../imgui/imgui.h:517
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputFloat@ImGui@@YA_NPEBDPEAMMM0H@Z")]
        public static extern bool InputFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float step,
            float step_fast,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            int flags = default
        );
        // overload
        public static bool InputFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float step = default,
            float step_fast = default
        )
        {
            return InputFloat(label, ref v, step, step_fast, "%.3f");
        }

        // ../../imgui/imgui.h:518
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputFloat2@ImGui@@YA_NPEBDQEAM0H@Z")]
        public static extern bool InputFloat2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            int flags = default
        );
        // overload
        public static bool InputFloat2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v
        )
        {
            return InputFloat2(label, ref v, "%.3f");
        }

        // ../../imgui/imgui.h:519
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputFloat3@ImGui@@YA_NPEBDQEAM0H@Z")]
        public static extern bool InputFloat3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            int flags = default
        );
        // overload
        public static bool InputFloat3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v
        )
        {
            return InputFloat3(label, ref v, "%.3f");
        }

        // ../../imgui/imgui.h:520
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputFloat4@ImGui@@YA_NPEBDQEAM0H@Z")]
        public static extern bool InputFloat4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            int flags = default
        );
        // overload
        public static bool InputFloat4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v
        )
        {
            return InputFloat4(label, ref v, "%.3f");
        }

        // ../../imgui/imgui.h:521
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputInt@ImGui@@YA_NPEBDPEAHHHH@Z")]
        public static extern bool InputInt(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int step = 1,
            int step_fast = 100,
            int flags = default
        );

        // ../../imgui/imgui.h:522
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputInt2@ImGui@@YA_NPEBDQEAHH@Z")]
        public static extern bool InputInt2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int flags = default
        );

        // ../../imgui/imgui.h:523
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputInt3@ImGui@@YA_NPEBDQEAHH@Z")]
        public static extern bool InputInt3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int flags = default
        );

        // ../../imgui/imgui.h:524
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputInt4@ImGui@@YA_NPEBDQEAHH@Z")]
        public static extern bool InputInt4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int v,
            int flags = default
        );

        // ../../imgui/imgui.h:525
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputDouble@ImGui@@YA_NPEBDPEANNN0H@Z")]
        public static extern bool InputDouble(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref double v,
            double step,
            double step_fast,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format,
            int flags = default
        );
        // overload
        public static bool InputDouble(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref double v,
            double step = default,
            double step_fast = default
        )
        {
            return InputDouble(label, ref v, step, step_fast, "%.6f");
        }

        // ../../imgui/imgui.h:526
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z")]
        public static extern bool InputScalar(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int data_type,
            IntPtr p_data,
            IntPtr p_step = default,
            IntPtr p_step_fast = default,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format = default,
            int flags = default
        );

        // ../../imgui/imgui.h:527
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputScalarN@ImGui@@YA_NPEBDHPEAXHPEBX20H@Z")]
        public static extern bool InputScalarN(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int data_type,
            IntPtr p_data,
            int components,
            IntPtr p_step = default,
            IntPtr p_step_fast = default,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string format = default,
            int flags = default
        );

        // ../../imgui/imgui.h:532
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorEdit3@ImGui@@YA_NPEBDQEAMH@Z")]
        public static extern bool ColorEdit3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float col,
            int flags = default
        );

        // ../../imgui/imgui.h:533
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorEdit4@ImGui@@YA_NPEBDQEAMH@Z")]
        public static extern bool ColorEdit4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float col,
            int flags = default
        );

        // ../../imgui/imgui.h:534
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorPicker3@ImGui@@YA_NPEBDQEAMH@Z")]
        public static extern bool ColorPicker3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float col,
            int flags = default
        );

        // ../../imgui/imgui.h:535
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorPicker4@ImGui@@YA_NPEBDQEAMHPEBM@Z")]
        public static extern bool ColorPicker4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float col,
            int flags = default,
            in float ref_col = default
        );

        // ../../imgui/imgui.h:536
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorButton@ImGui@@YA_NPEBDAEBUImVec4@@HUImVec2@@@Z")]
        public static extern bool ColorButton(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string desc_id,
            in Vector4 col,
            int flags = default,
            Vector2 size = default
        );

        // ../../imgui/imgui.h:537
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetColorEditOptions@ImGui@@YAXH@Z")]
        public static extern void SetColorEditOptions(
            int flags
        );

        // ../../imgui/imgui.h:541
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNode@ImGui@@YA_NPEBD@Z")]
        public static extern bool TreeNode(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label
        );

        // ../../imgui/imgui.h:542
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNode@ImGui@@YA_NPEBD0ZZ")]
        public static extern bool TreeNode(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:543
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNode@ImGui@@YA_NPEBXPEBDZZ")]
        public static extern bool TreeNode(
            IntPtr ptr_id,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:544
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNodeV@ImGui@@YA_NPEBD0PEAD@Z")]
        public static extern bool TreeNodeV(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:545
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNodeV@ImGui@@YA_NPEBXPEBDPEAD@Z")]
        public static extern bool TreeNodeV(
            IntPtr ptr_id,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:546
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNodeEx@ImGui@@YA_NPEBDH@Z")]
        public static extern bool TreeNodeEx(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int flags = default
        );

        // ../../imgui/imgui.h:547
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNodeEx@ImGui@@YA_NPEBDH0ZZ")]
        public static extern bool TreeNodeEx(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            int flags,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:548
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNodeEx@ImGui@@YA_NPEBXHPEBDZZ")]
        public static extern bool TreeNodeEx(
            IntPtr ptr_id,
            int flags,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:549
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNodeExV@ImGui@@YA_NPEBDH0PEAD@Z")]
        public static extern bool TreeNodeExV(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            int flags,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:550
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreeNodeExV@ImGui@@YA_NPEBXHPEBDPEAD@Z")]
        public static extern bool TreeNodeExV(
            IntPtr ptr_id,
            int flags,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:551
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreePush@ImGui@@YAXPEBD@Z")]
        public static extern void TreePush(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id
        );

        // ../../imgui/imgui.h:552
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreePush@ImGui@@YAXPEBX@Z")]
        public static extern void TreePush(
            IntPtr ptr_id = default
        );

        // ../../imgui/imgui.h:553
        [DllImport(Engine.Paths.Exe, EntryPoint = "?TreePop@ImGui@@YAXXZ")]
        public static extern void TreePop(
        );

        // ../../imgui/imgui.h:554
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetTreeNodeToLabelSpacing@ImGui@@YAMXZ")]
        public static extern float GetTreeNodeToLabelSpacing(
        );

        // ../../imgui/imgui.h:555
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CollapsingHeader@ImGui@@YA_NPEBDH@Z")]
        public static extern bool CollapsingHeader(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int flags = default
        );

        // ../../imgui/imgui.h:556
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CollapsingHeader@ImGui@@YA_NPEBDPEA_NH@Z")]
        public static extern bool CollapsingHeader(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref bool p_open,
            int flags = default
        );

        // ../../imgui/imgui.h:557
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextItemOpen@ImGui@@YAX_NH@Z")]
        public static extern void SetNextItemOpen(
            bool is_open,
            int cond = default
        );

        // ../../imgui/imgui.h:562
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z")]
        public static extern bool Selectable(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            bool selected = default,
            int flags = default,
            in Vector2 size = default
        );

        // ../../imgui/imgui.h:563
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Selectable@ImGui@@YA_NPEBDPEA_NHAEBUImVec2@@@Z")]
        public static extern bool Selectable(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref bool p_selected,
            int flags = default,
            in Vector2 size = default
        );

        // ../../imgui/imgui.h:567
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ListBox@ImGui@@YA_NPEBDPEAHQEBQEBDHH@Z")]
        public static extern bool ListBox(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int current_item,
            in IntPtr items,
            int items_count,
            int height_in_items = -1
        );

        // ../../imgui/imgui.h:568
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ListBox@ImGui@@YA_NPEBDPEAHP6A_NPEAXHPEAPEBD@Z2HH@Z")]
        public static extern bool ListBox(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref int current_item,
            IntPtr items_getter,
            IntPtr data,
            int items_count,
            int height_in_items = -1
        );

        // ../../imgui/imgui.h:569
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ListBoxHeader@ImGui@@YA_NPEBDAEBUImVec2@@@Z")]
        public static extern bool ListBoxHeader(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in Vector2 size = default
        );

        // ../../imgui/imgui.h:570
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ListBoxHeader@ImGui@@YA_NPEBDHH@Z")]
        public static extern bool ListBoxHeader(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            int items_count,
            int height_in_items = -1
        );

        // ../../imgui/imgui.h:571
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ListBoxFooter@ImGui@@YAXXZ")]
        public static extern void ListBoxFooter(
        );

        // ../../imgui/imgui.h:574
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PlotLines@ImGui@@YAXPEBDPEBMHH0MMUImVec2@@H@Z")]
        public static extern void PlotLines(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in float values,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min,
            float scale_max,
            Vector2 graph_size,
            int stride
        );
        // overload
        public static void PlotLines(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in float values,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min,
            float scale_max,
            Vector2 graph_size = default
        )
        {
            PlotLines(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, sizeof(float));
        }
        // overload
        public static void PlotLines(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in float values,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min
        )
        {
            PlotLines(label, values, values_count, values_offset, overlay_text, scale_min, float.MaxValue);
        }
        // overload
        public static void PlotLines(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in float values,
            int values_count,
            int values_offset = default,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text = default
        )
        {
            PlotLines(label, values, values_count, values_offset, overlay_text, float.MaxValue);
        }

        // ../../imgui/imgui.h:575
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PlotLines@ImGui@@YAXPEBDP6AMPEAXH@Z1HH0MMUImVec2@@@Z")]
        public static extern void PlotLines(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            IntPtr values_getter,
            IntPtr data,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min,
            float scale_max,
            Vector2 graph_size = default
        );
        // overload
        public static void PlotLines(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            IntPtr values_getter,
            IntPtr data,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min
        )
        {
            PlotLines(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, float.MaxValue);
        }
        // overload
        public static void PlotLines(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            IntPtr values_getter,
            IntPtr data,
            int values_count,
            int values_offset = default,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text = default
        )
        {
            PlotLines(label, values_getter, data, values_count, values_offset, overlay_text, float.MaxValue);
        }

        // ../../imgui/imgui.h:576
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PlotHistogram@ImGui@@YAXPEBDPEBMHH0MMUImVec2@@H@Z")]
        public static extern void PlotHistogram(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in float values,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min,
            float scale_max,
            Vector2 graph_size,
            int stride
        );
        // overload
        public static void PlotHistogram(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in float values,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min,
            float scale_max,
            Vector2 graph_size = default
        )
        {
            PlotHistogram(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, sizeof(float));
        }
        // overload
        public static void PlotHistogram(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in float values,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min
        )
        {
            PlotHistogram(label, values, values_count, values_offset, overlay_text, scale_min, float.MaxValue);
        }
        // overload
        public static void PlotHistogram(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            in float values,
            int values_count,
            int values_offset = default,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text = default
        )
        {
            PlotHistogram(label, values, values_count, values_offset, overlay_text, float.MaxValue);
        }

        // ../../imgui/imgui.h:577
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PlotHistogram@ImGui@@YAXPEBDP6AMPEAXH@Z1HH0MMUImVec2@@@Z")]
        public static extern void PlotHistogram(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            IntPtr values_getter,
            IntPtr data,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min,
            float scale_max,
            Vector2 graph_size = default
        );
        // overload
        public static void PlotHistogram(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            IntPtr values_getter,
            IntPtr data,
            int values_count,
            int values_offset,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text,
            float scale_min
        )
        {
            PlotHistogram(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, float.MaxValue);
        }
        // overload
        public static void PlotHistogram(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            IntPtr values_getter,
            IntPtr data,
            int values_count,
            int values_offset = default,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string overlay_text = default
        )
        {
            PlotHistogram(label, values_getter, data, values_count, values_offset, overlay_text, float.MaxValue);
        }

        // ../../imgui/imgui.h:581
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Value@ImGui@@YAXPEBD_N@Z")]
        public static extern void Value(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string prefix,
            bool b
        );

        // ../../imgui/imgui.h:582
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Value@ImGui@@YAXPEBDH@Z")]
        public static extern void Value(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string prefix,
            int v
        );

        // ../../imgui/imgui.h:583
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Value@ImGui@@YAXPEBDI@Z")]
        public static extern void Value(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string prefix,
            uint v
        );

        // ../../imgui/imgui.h:584
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Value@ImGui@@YAXPEBDM0@Z")]
        public static extern void Value(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string prefix,
            float v,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string float_format = default
        );

        // ../../imgui/imgui.h:590
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginMenuBar@ImGui@@YA_NXZ")]
        public static extern bool BeginMenuBar(
        );

        // ../../imgui/imgui.h:591
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndMenuBar@ImGui@@YAXXZ")]
        public static extern void EndMenuBar(
        );

        // ../../imgui/imgui.h:592
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginMainMenuBar@ImGui@@YA_NXZ")]
        public static extern bool BeginMainMenuBar(
        );

        // ../../imgui/imgui.h:593
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndMainMenuBar@ImGui@@YAXXZ")]
        public static extern void EndMainMenuBar(
        );

        // ../../imgui/imgui.h:594
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginMenu@ImGui@@YA_NPEBD_N@Z")]
        public static extern bool BeginMenu(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            bool enabled
        );
        // overload
        public static bool BeginMenu(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label
        )
        {
            return BeginMenu(label, true);
        }

        // ../../imgui/imgui.h:595
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndMenu@ImGui@@YAXXZ")]
        public static extern void EndMenu(
        );

        // ../../imgui/imgui.h:596
        [DllImport(Engine.Paths.Exe, EntryPoint = "?MenuItem@ImGui@@YA_NPEBD0_N1@Z")]
        public static extern bool MenuItem(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string shortcut,
            bool selected,
            bool enabled
        );
        // overload
        public static bool MenuItem(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string shortcut = default,
            bool selected = default
        )
        {
            return MenuItem(label, shortcut, selected, true);
        }

        // ../../imgui/imgui.h:597
        [DllImport(Engine.Paths.Exe, EntryPoint = "?MenuItem@ImGui@@YA_NPEBD0PEA_N_N@Z")]
        public static extern bool MenuItem(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string shortcut,
            ref bool p_selected,
            bool enabled
        );
        // overload
        public static bool MenuItem(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string shortcut,
            ref bool p_selected
        )
        {
            return MenuItem(label, shortcut, ref p_selected, true);
        }

        // ../../imgui/imgui.h:601
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginTooltip@ImGui@@YAXXZ")]
        public static extern void BeginTooltip(
        );

        // ../../imgui/imgui.h:602
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndTooltip@ImGui@@YAXXZ")]
        public static extern void EndTooltip(
        );

        // ../../imgui/imgui.h:603
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetTooltip@ImGui@@YAXPEBDZZ")]
        public static extern void SetTooltip(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:604
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetTooltipV@ImGui@@YAXPEBDPEAD@Z")]
        public static extern void SetTooltipV(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt,
            ref sbyte args
        );

        // ../../imgui/imgui.h:617
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginPopup@ImGui@@YA_NPEBDH@Z")]
        public static extern bool BeginPopup(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            int flags = default
        );

        // ../../imgui/imgui.h:618
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z")]
        public static extern bool BeginPopupModal(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string name,
            IntPtr p_open = default,
            int flags = default
        );

        // ../../imgui/imgui.h:619
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndPopup@ImGui@@YAXXZ")]
        public static extern void EndPopup(
        );

        // ../../imgui/imgui.h:626
        [DllImport(Engine.Paths.Exe, EntryPoint = "?OpenPopup@ImGui@@YAXPEBDH@Z")]
        public static extern void OpenPopup(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            int popup_flags = default
        );

        // ../../imgui/imgui.h:627
        [DllImport(Engine.Paths.Exe, EntryPoint = "?OpenPopupContextItem@ImGui@@YA_NPEBDH@Z")]
        public static extern bool OpenPopupContextItem(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id = default,
            int popup_flags = 1
        );

        // ../../imgui/imgui.h:628
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CloseCurrentPopup@ImGui@@YAXXZ")]
        public static extern void CloseCurrentPopup(
        );

        // ../../imgui/imgui.h:634
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z")]
        public static extern bool BeginPopupContextItem(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id = default,
            int popup_flags = 1
        );

        // ../../imgui/imgui.h:635
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z")]
        public static extern bool BeginPopupContextWindow(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id = default,
            int popup_flags = 1
        );

        // ../../imgui/imgui.h:636
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z")]
        public static extern bool BeginPopupContextVoid(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id = default,
            int popup_flags = 1
        );

        // ../../imgui/imgui.h:641
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsPopupOpen@ImGui@@YA_NPEBDH@Z")]
        public static extern bool IsPopupOpen(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            int flags = default
        );

        // ../../imgui/imgui.h:648
        [DllImport(Engine.Paths.Exe, EntryPoint = "?Columns@ImGui@@YAXHPEBD_N@Z")]
        public static extern void Columns(
            int count,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string id,
            bool border
        );
        // overload
        public static void Columns(
            int count = 1,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string id = default
        )
        {
            Columns(count, id, true);
        }

        // ../../imgui/imgui.h:649
        [DllImport(Engine.Paths.Exe, EntryPoint = "?NextColumn@ImGui@@YAXXZ")]
        public static extern void NextColumn(
        );

        // ../../imgui/imgui.h:650
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetColumnIndex@ImGui@@YAHXZ")]
        public static extern int GetColumnIndex(
        );

        // ../../imgui/imgui.h:651
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetColumnWidth@ImGui@@YAMH@Z")]
        public static extern float GetColumnWidth(
            int column_index = -1
        );

        // ../../imgui/imgui.h:652
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetColumnWidth@ImGui@@YAXHM@Z")]
        public static extern void SetColumnWidth(
            int column_index,
            float width
        );

        // ../../imgui/imgui.h:653
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetColumnOffset@ImGui@@YAMH@Z")]
        public static extern float GetColumnOffset(
            int column_index = -1
        );

        // ../../imgui/imgui.h:654
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetColumnOffset@ImGui@@YAXHM@Z")]
        public static extern void SetColumnOffset(
            int column_index,
            float offset_x
        );

        // ../../imgui/imgui.h:655
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetColumnsCount@ImGui@@YAHXZ")]
        public static extern int GetColumnsCount(
        );

        // ../../imgui/imgui.h:659
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginTabBar@ImGui@@YA_NPEBDH@Z")]
        public static extern bool BeginTabBar(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string str_id,
            int flags = default
        );

        // ../../imgui/imgui.h:660
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndTabBar@ImGui@@YAXXZ")]
        public static extern void EndTabBar(
        );

        // ../../imgui/imgui.h:661
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginTabItem@ImGui@@YA_NPEBDPEA_NH@Z")]
        public static extern bool BeginTabItem(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            IntPtr p_open = default,
            int flags = default
        );

        // ../../imgui/imgui.h:662
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndTabItem@ImGui@@YAXXZ")]
        public static extern void EndTabItem(
        );

        // ../../imgui/imgui.h:663
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetTabItemClosed@ImGui@@YAXPEBD@Z")]
        public static extern void SetTabItemClosed(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string tab_or_docked_window_label
        );

        // ../../imgui/imgui.h:673
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DockSpace@ImGui@@YAXIAEBUImVec2@@HPEBUImGuiWindowClass@@@Z")]
        public static extern void DockSpace(
            uint id,
            in Vector2 size = default,
            int flags = default,
            in ImGuiWindowClass window_class = default
        );

        // ../../imgui/imgui.h:674
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DockSpaceOverViewport@ImGui@@YAIPEAUImGuiViewport@@HPEBUImGuiWindowClass@@@Z")]
        public static extern uint DockSpaceOverViewport(
            IntPtr viewport = default,
            int flags = default,
            in ImGuiWindowClass window_class = default
        );

        // ../../imgui/imgui.h:675
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowDockID@ImGui@@YAXIH@Z")]
        public static extern void SetNextWindowDockID(
            uint dock_id,
            int cond = default
        );

        // ../../imgui/imgui.h:676
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetNextWindowClass@ImGui@@YAXPEBUImGuiWindowClass@@@Z")]
        public static extern void SetNextWindowClass(
            in ImGuiWindowClass window_class
        );

        // ../../imgui/imgui.h:677
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetWindowDockID@ImGui@@YAIXZ")]
        public static extern uint GetWindowDockID(
        );

        // ../../imgui/imgui.h:678
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsWindowDocked@ImGui@@YA_NXZ")]
        public static extern bool IsWindowDocked(
        );

        // ../../imgui/imgui.h:682
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LogToTTY@ImGui@@YAXH@Z")]
        public static extern void LogToTTY(
            int auto_open_depth = -1
        );

        // ../../imgui/imgui.h:683
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LogToFile@ImGui@@YAXHPEBD@Z")]
        public static extern void LogToFile(
            int auto_open_depth = -1,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string filename = default
        );

        // ../../imgui/imgui.h:684
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LogToClipboard@ImGui@@YAXH@Z")]
        public static extern void LogToClipboard(
            int auto_open_depth = -1
        );

        // ../../imgui/imgui.h:685
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LogFinish@ImGui@@YAXXZ")]
        public static extern void LogFinish(
        );

        // ../../imgui/imgui.h:686
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LogButtons@ImGui@@YAXXZ")]
        public static extern void LogButtons(
        );

        // ../../imgui/imgui.h:687
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LogText@ImGui@@YAXPEBDZZ")]
        public static extern void LogText(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string fmt
        );

        // ../../imgui/imgui.h:692
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginDragDropSource@ImGui@@YA_NH@Z")]
        public static extern bool BeginDragDropSource(
            int flags = default
        );

        // ../../imgui/imgui.h:693
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z")]
        public static extern bool SetDragDropPayload(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string type,
            IntPtr data,
            ulong sz,
            int cond = default
        );

        // ../../imgui/imgui.h:694
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndDragDropSource@ImGui@@YAXXZ")]
        public static extern void EndDragDropSource(
        );

        // ../../imgui/imgui.h:695
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginDragDropTarget@ImGui@@YA_NXZ")]
        public static extern bool BeginDragDropTarget(
        );

        // ../../imgui/imgui.h:696
        [DllImport(Engine.Paths.Exe, EntryPoint = "?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z")]
        public static extern IntPtr AcceptDragDropPayload(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string type,
            int flags = default
        );

        // ../../imgui/imgui.h:697
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndDragDropTarget@ImGui@@YAXXZ")]
        public static extern void EndDragDropTarget(
        );

        // ../../imgui/imgui.h:698
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ")]
        public static extern IntPtr GetDragDropPayload(
        );

        // ../../imgui/imgui.h:701
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z")]
        public static extern void PushClipRect(
            in Vector2 clip_rect_min,
            in Vector2 clip_rect_max,
            bool intersect_with_current_clip_rect
        );

        // ../../imgui/imgui.h:702
        [DllImport(Engine.Paths.Exe, EntryPoint = "?PopClipRect@ImGui@@YAXXZ")]
        public static extern void PopClipRect(
        );

        // ../../imgui/imgui.h:706
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetItemDefaultFocus@ImGui@@YAXXZ")]
        public static extern void SetItemDefaultFocus(
        );

        // ../../imgui/imgui.h:707
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetKeyboardFocusHere@ImGui@@YAXH@Z")]
        public static extern void SetKeyboardFocusHere(
            int offset = default
        );

        // ../../imgui/imgui.h:712
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemHovered@ImGui@@YA_NH@Z")]
        public static extern bool IsItemHovered(
            int flags = default
        );

        // ../../imgui/imgui.h:713
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemActive@ImGui@@YA_NXZ")]
        public static extern bool IsItemActive(
        );

        // ../../imgui/imgui.h:714
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemFocused@ImGui@@YA_NXZ")]
        public static extern bool IsItemFocused(
        );

        // ../../imgui/imgui.h:715
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemClicked@ImGui@@YA_NH@Z")]
        public static extern bool IsItemClicked(
            int mouse_button = default
        );

        // ../../imgui/imgui.h:716
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemVisible@ImGui@@YA_NXZ")]
        public static extern bool IsItemVisible(
        );

        // ../../imgui/imgui.h:717
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemEdited@ImGui@@YA_NXZ")]
        public static extern bool IsItemEdited(
        );

        // ../../imgui/imgui.h:718
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemActivated@ImGui@@YA_NXZ")]
        public static extern bool IsItemActivated(
        );

        // ../../imgui/imgui.h:719
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemDeactivated@ImGui@@YA_NXZ")]
        public static extern bool IsItemDeactivated(
        );

        // ../../imgui/imgui.h:720
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ")]
        public static extern bool IsItemDeactivatedAfterEdit(
        );

        // ../../imgui/imgui.h:721
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsItemToggledOpen@ImGui@@YA_NXZ")]
        public static extern bool IsItemToggledOpen(
        );

        // ../../imgui/imgui.h:722
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsAnyItemHovered@ImGui@@YA_NXZ")]
        public static extern bool IsAnyItemHovered(
        );

        // ../../imgui/imgui.h:723
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsAnyItemActive@ImGui@@YA_NXZ")]
        public static extern bool IsAnyItemActive(
        );

        // ../../imgui/imgui.h:724
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsAnyItemFocused@ImGui@@YA_NXZ")]
        public static extern bool IsAnyItemFocused(
        );

        // ../../imgui/imgui.h:725
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetItemRectMin(
        );

        // ../../imgui/imgui.h:726
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetItemRectMax(
        );

        // ../../imgui/imgui.h:727
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetItemRectSize(
        );

        // ../../imgui/imgui.h:728
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetItemAllowOverlap@ImGui@@YAXXZ")]
        public static extern void SetItemAllowOverlap(
        );

        // ../../imgui/imgui.h:731
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z")]
        public static extern bool IsRectVisible(
            in Vector2 size
        );

        // ../../imgui/imgui.h:732
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z")]
        public static extern bool IsRectVisible(
            in Vector2 rect_min,
            in Vector2 rect_max
        );

        // ../../imgui/imgui.h:733
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetTime@ImGui@@YANXZ")]
        public static extern double GetTime(
        );

        // ../../imgui/imgui.h:734
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetFrameCount@ImGui@@YAHXZ")]
        public static extern int GetFrameCount(
        );

        // ../../imgui/imgui.h:735
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ")]
        public static extern IntPtr GetBackgroundDrawList(
        );

        // ../../imgui/imgui.h:736
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ")]
        public static extern IntPtr GetForegroundDrawList(
        );

        // ../../imgui/imgui.h:737
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z")]
        public static extern IntPtr GetBackgroundDrawList(
            ref ImGuiViewport viewport
        );

        // ../../imgui/imgui.h:738
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z")]
        public static extern IntPtr GetForegroundDrawList(
            ref ImGuiViewport viewport
        );

        // ../../imgui/imgui.h:739
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ")]
        public static extern IntPtr GetDrawListSharedData(
        );

        // ../../imgui/imgui.h:740
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetStyleColorName@ImGui@@YAPEBDH@Z")]
        public static extern IntPtr GetStyleColorName(
            int idx
        );

        // ../../imgui/imgui.h:741
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z")]
        public static extern void SetStateStorage(
            ref ImGuiStorage storage
        );

        // ../../imgui/imgui.h:742
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ")]
        public static extern IntPtr GetStateStorage(
        );

        // ../../imgui/imgui.h:743
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CalcListClipping@ImGui@@YAXHMPEAH0@Z")]
        public static extern void CalcListClipping(
            int items_count,
            float items_height,
            ref int out_items_display_start,
            ref int out_items_display_end
        );

        // ../../imgui/imgui.h:744
        [DllImport(Engine.Paths.Exe, EntryPoint = "?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z")]
        public static extern bool BeginChildFrame(
            uint id,
            in Vector2 size,
            int flags = default
        );

        // ../../imgui/imgui.h:745
        [DllImport(Engine.Paths.Exe, EntryPoint = "?EndChildFrame@ImGui@@YAXXZ")]
        public static extern void EndChildFrame(
        );

        // ../../imgui/imgui.h:748
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z")]
        public static extern Vector2 CalcTextSize(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string text,
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string text_end = default,
            bool hide_text_after_double_hash = default,
            float wrap_width = -1.0f
        );

        // ../../imgui/imgui.h:751
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z")]
        public static extern Vector4 ColorConvertU32ToFloat4(
            uint _in
        );

        // ../../imgui/imgui.h:752
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z")]
        public static extern uint ColorConvertFloat4ToU32(
            in Vector4 _in
        );

        // ../../imgui/imgui.h:753
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z")]
        public static extern void ColorConvertRGBtoHSV(
            float r,
            float g,
            float b,
            ref float out_h,
            ref float out_s,
            ref float out_v
        );

        // ../../imgui/imgui.h:754
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z")]
        public static extern void ColorConvertHSVtoRGB(
            float h,
            float s,
            float v,
            ref float out_r,
            ref float out_g,
            ref float out_b
        );

        // ../../imgui/imgui.h:759
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetKeyIndex@ImGui@@YAHH@Z")]
        public static extern int GetKeyIndex(
            int imgui_key
        );

        // ../../imgui/imgui.h:760
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsKeyDown@ImGui@@YA_NH@Z")]
        public static extern bool IsKeyDown(
            int user_key_index
        );

        // ../../imgui/imgui.h:761
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsKeyPressed@ImGui@@YA_NH_N@Z")]
        public static extern bool IsKeyPressed(
            int user_key_index,
            bool repeat
        );
        // overload
        public static bool IsKeyPressed(
            int user_key_index
        )
        {
            return IsKeyPressed(user_key_index, true);
        }

        // ../../imgui/imgui.h:762
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsKeyReleased@ImGui@@YA_NH@Z")]
        public static extern bool IsKeyReleased(
            int user_key_index
        );

        // ../../imgui/imgui.h:763
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetKeyPressedAmount@ImGui@@YAHHMM@Z")]
        public static extern int GetKeyPressedAmount(
            int key_index,
            float repeat_delay,
            float rate
        );

        // ../../imgui/imgui.h:764
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CaptureKeyboardFromApp@ImGui@@YAX_N@Z")]
        public static extern void CaptureKeyboardFromApp(
            bool want_capture_keyboard_value
        );
        // overload
        public static void CaptureKeyboardFromApp(
        )
        {
            CaptureKeyboardFromApp(true);
        }

        // ../../imgui/imgui.h:770
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsMouseDown@ImGui@@YA_NH@Z")]
        public static extern bool IsMouseDown(
            int button
        );

        // ../../imgui/imgui.h:771
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsMouseClicked@ImGui@@YA_NH_N@Z")]
        public static extern bool IsMouseClicked(
            int button,
            bool repeat = default
        );

        // ../../imgui/imgui.h:772
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsMouseReleased@ImGui@@YA_NH@Z")]
        public static extern bool IsMouseReleased(
            int button
        );

        // ../../imgui/imgui.h:773
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsMouseDoubleClicked@ImGui@@YA_NH@Z")]
        public static extern bool IsMouseDoubleClicked(
            int button
        );

        // ../../imgui/imgui.h:774
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z")]
        public static extern bool IsMouseHoveringRect(
            in Vector2 r_min,
            in Vector2 r_max,
            bool clip
        );
        // overload
        public static bool IsMouseHoveringRect(
            in Vector2 r_min,
            in Vector2 r_max
        )
        {
            return IsMouseHoveringRect(r_min, r_max, true);
        }

        // ../../imgui/imgui.h:775
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z")]
        public static extern bool IsMousePosValid(
            in Vector2 mouse_pos = default
        );

        // ../../imgui/imgui.h:776
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsAnyMouseDown@ImGui@@YA_NXZ")]
        public static extern bool IsAnyMouseDown(
        );

        // ../../imgui/imgui.h:777
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetMousePos@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetMousePos(
        );

        // ../../imgui/imgui.h:778
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ")]
        public static extern Vector2 GetMousePosOnOpeningCurrentPopup(
        );

        // ../../imgui/imgui.h:779
        [DllImport(Engine.Paths.Exe, EntryPoint = "?IsMouseDragging@ImGui@@YA_NHM@Z")]
        public static extern bool IsMouseDragging(
            int button,
            float lock_threshold = -1.0f
        );

        // ../../imgui/imgui.h:780
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z")]
        public static extern Vector2 GetMouseDragDelta(
            int button = default,
            float lock_threshold = -1.0f
        );

        // ../../imgui/imgui.h:781
        [DllImport(Engine.Paths.Exe, EntryPoint = "?ResetMouseDragDelta@ImGui@@YAXH@Z")]
        public static extern void ResetMouseDragDelta(
            int button = default
        );

        // ../../imgui/imgui.h:782
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetMouseCursor@ImGui@@YAHXZ")]
        public static extern int GetMouseCursor(
        );

        // ../../imgui/imgui.h:783
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetMouseCursor@ImGui@@YAXH@Z")]
        public static extern void SetMouseCursor(
            int cursor_type
        );

        // ../../imgui/imgui.h:784
        [DllImport(Engine.Paths.Exe, EntryPoint = "?CaptureMouseFromApp@ImGui@@YAX_N@Z")]
        public static extern void CaptureMouseFromApp(
            bool want_capture_mouse_value
        );
        // overload
        public static void CaptureMouseFromApp(
        )
        {
            CaptureMouseFromApp(true);
        }

        // ../../imgui/imgui.h:788
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetClipboardText@ImGui@@YAPEBDXZ")]
        public static extern IntPtr GetClipboardText(
        );

        // ../../imgui/imgui.h:789
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetClipboardText@ImGui@@YAXPEBD@Z")]
        public static extern void SetClipboardText(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string text
        );

        // ../../imgui/imgui.h:794
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z")]
        public static extern void LoadIniSettingsFromDisk(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string ini_filename
        );

        // ../../imgui/imgui.h:795
        [DllImport(Engine.Paths.Exe, EntryPoint = "?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z")]
        public static extern void LoadIniSettingsFromMemory(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string ini_data,
            ulong ini_size = default
        );

        // ../../imgui/imgui.h:796
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z")]
        public static extern void SaveIniSettingsToDisk(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string ini_filename
        );

        // ../../imgui/imgui.h:797
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z")]
        public static extern IntPtr SaveIniSettingsToMemory(
            IntPtr out_ini_size = default
        );

        // ../../imgui/imgui.h:800
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z")]
        public static extern bool DebugCheckVersionAndDataLayout(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string version_str,
            ulong sz_io,
            ulong sz_style,
            ulong sz_vec2,
            ulong sz_vec4,
            ulong sz_drawvert,
            ulong sz_drawidx
        );

        // ../../imgui/imgui.h:805
        [DllImport(Engine.Paths.Exe, EntryPoint = "?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z")]
        public static extern void SetAllocatorFunctions(
            IntPtr alloc_func,
            IntPtr free_func,
            IntPtr user_data = default
        );

        // ../../imgui/imgui.h:806
        [DllImport(Engine.Paths.Exe, EntryPoint = "?MemAlloc@ImGui@@YAPEAX_K@Z")]
        public static extern IntPtr MemAlloc(
            ulong size
        );

        // ../../imgui/imgui.h:807
        [DllImport(Engine.Paths.Exe, EntryPoint = "?MemFree@ImGui@@YAXPEAX@Z")]
        public static extern void MemFree(
            IntPtr ptr
        );

        // ../../imgui/imgui.h:812
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetPlatformIO@ImGui@@YAAEAUImGuiPlatformIO@@XZ")]
        public static extern IntPtr GetPlatformIO(
        );

        // ../../imgui/imgui.h:813
        [DllImport(Engine.Paths.Exe, EntryPoint = "?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ")]
        public static extern IntPtr GetMainViewport(
        );

        // ../../imgui/imgui.h:814
        [DllImport(Engine.Paths.Exe, EntryPoint = "?UpdatePlatformWindows@ImGui@@YAXXZ")]
        public static extern void UpdatePlatformWindows(
        );

        // ../../imgui/imgui.h:815
        [DllImport(Engine.Paths.Exe, EntryPoint = "?RenderPlatformWindowsDefault@ImGui@@YAXPEAX0@Z")]
        public static extern void RenderPlatformWindowsDefault(
            IntPtr platform_render_arg = default,
            IntPtr renderer_render_arg = default
        );

        // ../../imgui/imgui.h:816
        [DllImport(Engine.Paths.Exe, EntryPoint = "?DestroyPlatformWindows@ImGui@@YAXXZ")]
        public static extern void DestroyPlatformWindows(
        );

        // ../../imgui/imgui.h:817
        [DllImport(Engine.Paths.Exe, EntryPoint = "?FindViewportByID@ImGui@@YAPEAUImGuiViewport@@I@Z")]
        public static extern IntPtr FindViewportByID(
            uint id
        );

        // ../../imgui/imgui.h:818
        [DllImport(Engine.Paths.Exe, EntryPoint = "?FindViewportByPlatformHandle@ImGui@@YAPEAUImGuiViewport@@PEAX@Z")]
        public static extern IntPtr FindViewportByPlatformHandle(
            IntPtr platform_handle
        );

        // ../../imgui/imgui.h:1792
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputFloat@ImGui@@YA_NPEBDPEAMMMHH@Z")]
        public static extern bool InputFloat(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            float step,
            float step_fast,
            int decimal_precision,
            int flags = default
        );

        // ../../imgui/imgui.h:1793
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputFloat2@ImGui@@YA_NPEBDQEAMHH@Z")]
        public static extern bool InputFloat2(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            int decimal_precision,
            int flags = default
        );

        // ../../imgui/imgui.h:1794
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputFloat3@ImGui@@YA_NPEBDQEAMHH@Z")]
        public static extern bool InputFloat3(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            int decimal_precision,
            int flags = default
        );

        // ../../imgui/imgui.h:1795
        [DllImport(Engine.Paths.Exe, EntryPoint = "?InputFloat4@ImGui@@YA_NPEBDQEAMHH@Z")]
        public static extern bool InputFloat4(
            [MarshalAs(UnmanagedType.LPUTF8Str), In] string label,
            ref float v,
            int decimal_precision,
            int flags = default
        );

    }
}
